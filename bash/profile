# General settings
export CLICOLOR=auto
export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:';
export SVN_EDITOR='mvim -vf'
export EDITOR=vim
export PATH=/usr/local/bin:$HOME/bin:$HOME/svnmerge:/usr/local/mysql/bin:$PATH:/usr/local/sbin:/opt/pose/implementation/bin:/Users/carstendreesbach/pear/bin:~/.npm-global/bin
test -d /opt/cisco/anyconnect/bin && export PATH=$PATH:/opt/cisco/anyconnect/bin
export HISTTIMEFORMAT='%F %T '
# Support for 256 colors in Linux
[[ "$(uname -s)" == "Linux" && -z "$TMUX" ]] && export TERM=xterm-256color

# OPOWER Dev environment settings
test -f "$HOME/.secure" && . "$HOME/.secure"
export R_HOME=/Library/Frameworks/R.framework/Versions/2.12/Resources/
export workspace=/opt/pose
export workspace_client=/opt/pose/client
export svnmerge_path=$workspace/svnmerge
export SSH_TUNNEL_REMOTE_PORT=5542
export CLIENT_MAIN=$R/main/clients
export CDPATH=.:~:/opt/pose:/opt/pose/clients:$CDPATH
export CONFIG_DOMAIN=local
export QUACK_SPECS_LOCATION=$workspace/quack-specs
export QUACK_RESULTS_LOCATION=/tmp
# Setting for running report app
export MAVEN_OPTS="-Xms512m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=512m -Djavax.net.ssl.trustStore=$JAVA_HOME/jre/lib/security/trust.jks -Djavax.net.ssl.trustStorePassword=changeit -Djavax.net.ssl.keyStore=$JAVA_HOME/jre/lib/security/trust.jks -Djavax.net.ssl.keyStoreType=jks -Djavax.net.ssl.keyStorePassword=changeit"
# No longer needed? Seems to work without this...
# export M2_HOME=/usr/local/Cellar/maven2/2.2.1/libexec
# getting hub to use GH:E
export GITHUB_HOST=github.va.opower.it
export G="git@github.va.opower.it"
export GITHUB_USER=carsten-dreesbach
export GIT_USER=carsten-dreesbach
export GITHUB_URL=https://github.va.opower.it/

# Allow for vim crontab editing - idea from
# http://drawohara.com/post/6344279/crontab-temp-file-must-be-edited-in-place
alias crontab="VIM_CRONTAB=true crontab"

# Run techops.bash for extra functions
test -f $workspace/techops.bash/techops.bash && . $workspace/techops.bash/techops.bash

# Load GRC
test -x brew && test -f "`brew --prefix`/etc/grc.bashrc" && . "`brew --prefix`/etc/grc.bashrc"

# Set up some other useful PSE functions
#. ~/bin/opower/useful_pse_functions.sh

# Unified history files across sessions - see http://superuser.com/questions/37576/can-history-files-be-unified-in-bash
# 2011-06-14 decided not to use this after all for now, too annoying to get mixed command history across sessions
export HISTSIZE=1000000 HISTFILESIZE=1000000
#export HISTCONTROL=ignoreboth # remove duplicate history entries
#shopt -s histappend
#PROMPT_COMMAND="$PROMPT_COMMAND;history -a; history -n"
# New history config for supporting huffshell gem https://github.com/paulmars/huffshell
test -x shopt && shopt -s histappend
#shopt extended_history
# setopt hist_expire_dups_first
# setopt hist_ignore_dups # ignore duplication command history list
#shopt hist_ignore_space
#shopt -s histverify
#shopt inc_append_history
# setopt share_history # share command history data
test -x shopt && shopt -s cdspell
test -x shopt && shopt -s nocaseglob

# OpsQA settings (from https://wiki.opower.com/display/OQ/Ops+QA+Framework)
export PATH=$PATH:$workspace/opsqa/bin
#export RUBYLIB=$RUBYLIB:$workspace/opsqa/lib:$workspace/clyde/lib
export CLYDE_UNIT_PATH=$workspace/implementation/db

# Node settings
export NODE_PATH=/usr/local/lib/node_modules

# ignore .svn, .bak files for bash-completion
export FIGNORE=.svn:~:.bak

# GIS stuff
# This is the Postgres version that has GIS support
export PATH=/usr/local/pgsql-9.1/bin:$PATH
export PATH=/Library/Frameworks/PROJ.framework/Programs:$PATH
export PATH=/Library/Frameworks/GDAL.framework/Programs:$PATH

# TextMate shell support
#export EDITOR="/usr/local/bin/mate -w"

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

# Adding JAVA_HOME for OSX Mountain Lion (10.8)
test -x /usr/libexec/java_home && export JAVA_HOME=`/usr/libexec/java_home`

# Hive setup (from http://noobergeek.blogspot.com/2012/09/installing-hive-on-osx-lion-107-with.html)
if [[ -d /usr/local/Cellar ]]; then
  export HADOOP_HOME=/usr/local/Cellar/hadoop/1.2.1
  export HIVE_HOME=/usr/local/Cellar/hive/0.11.0/libexec
fi

# Linux keychain
test -x "$(which keychain)" && keychain id_dsa carsten id_rsa id_rsa_opower launchpad-private.ssh &> /dev/null
test -f $HOME/.keychain/$(hostname)-sh && . $HOME/.keychain/$(hostname)-sh

# Add z for directory jumping - see https://github.com/rupa/z
test -f $HOME/bin/z/z.sh && . $HOME/bin/z/z.sh

# Run opower.bash for OPOWER dev environment setup
test -f $workspace/opower.bash/opower.bash && . $workspace/opower.bash/opower.bash

test -s "/Users/carstendreesbach/.rvm/scripts/rvm" && . "/Users/carstendreesbach/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# This loads RVM into a shell session. KEEP THIS AS THE LAST LINE!
test -s "$HOME/.rvm/scripts/rvm" && . "$HOME/.rvm/scripts/rvm"

# Test for PGSQL
export PGDATA=/usr/local/pgsql/data/

# Docker
export DOCKER_HOST=tcp://192.168.59.103:2376
export DOCKER_CERT_PATH=/Users/carsten.dreesbach/.boot2docker/certs/boot2docker-vm
export DOCKER_TLS_VERIFY=1

# Settings for Opower client provisioning
export puppet_dir=$workspace/puppet
export crypto_dir=$workspace/client-crypto

# Load aliases last to make sure mine override any others previously defined
test -f "$HOME/.alias" && . "$HOME/.alias"

# Path for Go, if installed
[[ -d "$HOME/go/bin" ]] && export PATH=$HOME/go/bin:$PATH
